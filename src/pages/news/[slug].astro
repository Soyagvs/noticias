---
import { getCollection } from "astro:content";
import "../../styles/Slug.css";

// Definir un tipo para `post`
interface Post {
  id: string;
  slug: string;
  data: {
    title: string;
    author: string;
    date: string;
    image: string;
    category: string;
  };
  render: () => Promise<{ Content: any }>;
}

export async function getStaticPaths() {
  const news = await getCollection("news");

  return news.map((post: any) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props as { post: Post }; // Asegurar que `post` tiene el tipo correcto

if (!post) {
  throw new Error("Noticia no encontrada");
}

const { Content } = await post.render();
---

<head>
  <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
</head>
<main>
  <section class="section-hero markdown-background">
    <a href="/" class="back-button">← go back</a>
    <img class="image-hero" src={post.data.image} alt={post.data.title} />
    <h1 class="title-h1">{post.data.title}</h1>
    <p class="data">
      by <span class="name"
        >{post.data.author} | <span class="date-name"
          >{new Date(post.data.date).toLocaleDateString()}</span
        ></span
      >
      <span class="category-label">{post.data.category || "Sin categoría"}</span
      >
    </p>
  </section>

  <div class="content markdown-background">
    <Content />
  </div>
</main>
